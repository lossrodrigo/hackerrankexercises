==== QUESTION ====

HackerLand University has the following grading policy:

Every student receives a  in the inclusive range  from 0 to 100.
Any GRADE less than 40 is a failing grade.

Sam is a professor at the university and likes to round each student's GRADE according to these rules:

If the difference between the GRADE and the next multiple of 5 is less than 3, round GRADE up to the next multiple of 5.
If the value of GRADE is less than 38, no rounding occurs as the result will still be a failing grade.


==== ANSWER ====


import java.io.*
import java.math.*
import java.security.*
import java.text.*
import java.util.*
import java.util.concurrent.*
import java.util.function.*
import java.util.regex.*
import java.util.stream.*
import kotlin.collections.*
import kotlin.comparisons.*
import kotlin.io.*
import kotlin.jvm.*
import kotlin.jvm.functions.*
import kotlin.jvm.internal.*
import kotlin.ranges.*
import kotlin.sequences.*
import kotlin.text.*

/*
 * Complete the 'gradingStudents' function below.
 *
 * The function is expected to return an INTEGER_ARRAY.
 * The function accepts INTEGER_ARRAY grades as parameter.
 */

fun gradingStudents(grades: Array<Int>): Array<Int> {
    // Write your code here

    for(i in 0 until grades.size){
        var multipleOfFive = grades[i]

        if (grades[i] >= 38){

            while (multipleOfFive % 5 != 0){
                multipleOfFive +=1
            }
            if (multipleOfFive - grades[i] < 3){
                grades[i] = multipleOfFive
            }
        }
    }
    return grades
}

fun main(args: Array<String>) {
    val gradesCount = readLine()!!.trim().toInt()

    val grades = Array<Int>(gradesCount, { 0 })


    for (i in 0 until gradesCount) {
        val gradesItem = readLine()!!.trim().toInt()
        grades[i] = gradesItem
    }

    val result = gradingStudents(grades)

    println(result.joinToString("\n"))
}



